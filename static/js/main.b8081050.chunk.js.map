{"version":3,"sources":["components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundry.js","components/Header.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["SearchBox","searchfield","searchChange","className","aria-label","type","placeholder","onChange","Card","name","email","id","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","Header","React","memo","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","useState","count","setCount","useEffect","console","log","searchField","useSelector","searchRobots","requestRobots","isPending","dispatch","useDispatch","fetch","then","response","json","data","payload","catch","filteredRobots","filter","robot","toLowerCase","includes","onClick","event","text","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"qPAgBeA,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKC,UAAU,MAAf,SACI,uBACIC,aAAW,gBACXD,UAAU,mCACVE,KAAK,SACLC,YAAY,gBACZC,SAAUL,OCIXM,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKR,UAAU,sDAAf,UACI,qBAAKS,IAAG,+BAA0BD,EAA1B,iBAA6CE,IAAI,WACzD,gCACI,6BAAKJ,IACL,4BAAIC,WCcLI,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIP,GAAII,EAAOG,GAAGP,GACdF,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZK,EAAOG,GAAGP,UCA5BQ,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,Y,gCCiBJC,E,kDAnBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKX,MAAMK,a,GAhBCQ,aCIZC,EAJAC,IAAMC,MAAK,WACtB,OAAO,oBAAIjC,UAAU,KAAd,4BCHEkC,G,MAAsB,uBAEtBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAwB,wBCuCtBC,MAjCf,WAAgB,IAAD,EACeC,mBAAS,GADxB,mBACJC,EADI,KACGC,EADH,KAEXC,qBAAU,WAAKC,QAAQC,IAAIJ,KAAS,CAACA,IAErC,IAAMK,EAAcC,aAAY,SAAAtB,GAAK,OAAIA,EAAMuB,aAAaF,eACtDjC,EAASkC,aAAY,SAAAtB,GAAK,OAAIA,EAAMwB,cAAcpC,UAClDqC,EAAYH,aAAY,SAAAtB,GAAK,OAAIA,EAAMwB,cAAcC,aACrDvB,EAAQoB,aAAY,SAAAtB,GAAK,OAAIA,EAAMwB,cAActB,SAEjDwB,EAAWC,cAEjBT,qBAAU,kBCTe,SAACQ,GAC1BA,EAAS,CAAEhD,KAAMiC,IACjBiB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIN,EAAS,CAAChD,KAAMkC,EAAwBqB,QAASD,OAC9DE,OAAM,SAAAhC,GAAK,OAAIwB,EAAS,CAAChD,KAAMmC,EAAuBoB,QAAS/B,ODIlDsB,CAAcE,KAAW,CAACA,IAExC,IAAMS,EAAiB/C,EAAOgD,QAAO,SAAAC,GACjC,OAAOA,EAAMvD,KAAKwD,cAAcC,SAASlB,EAAYiB,kBAGzD,OAAOb,EACH,4CAEI,sBAAKjD,UAAU,KAAf,UACI,cAAC,EAAD,IACA,yBAAQgE,QAAS,kBAAIvB,EAASD,EAAM,IAApC,uBAAmDA,KACnD,cAAC,EAAD,CAAWzC,aAAc,SAACkE,GAAD,OAAWf,GC1BrBgB,ED0B6CD,EAAME,OAAOC,MC1BhD,CACrClE,KAAMgC,EACNuB,QAASS,KAFiB,IAACA,KD2Bf,cAAC,EAAD,UACI,cAAC,EAAD,CAAcxC,MAAOA,EAArB,SACI,cAAC,EAAD,CAAUd,OAAQ+C,YExB3BU,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCCRO,EAAqB,CACvBhC,YAAa,IAYXiC,EAAqB,CACvB7B,WAAW,EACXrC,OAAQ,GACRc,MAAO,ICZLqD,EAASC,yBACTC,EAAcC,YAAgB,CAACnC,aDDT,WAA0C,IAAzCvB,EAAwC,uDAAlCqD,EAAoBM,EAAc,uDAAP,GAC1D,OAAOA,EAAOjF,MACV,KAAKgC,EACD,OAAOkD,OAAOC,OAAO,GAAI7D,EAAO,CAACqB,YAAasC,EAAO1B,UACzD,QACI,OAAOjC,ICJgCwB,cDatB,WAA0C,IAAzCxB,EAAwC,uDAAlCsD,EAAoBK,EAAc,uDAAP,GAC3D,OAAOA,EAAOjF,MACV,KAAKiC,EACD,OAAOiD,OAAOC,OAAO,GAAI7D,EAAO,CAACyB,WAAW,IAChD,KAAKb,EACD,OAAOgD,OAAOC,OAAO,GAAI7D,EAAO,CAACZ,OAAQuE,EAAO1B,QAASR,WAAW,IACxE,KAAKZ,EACD,OAAO+C,OAAOC,OAAO,GAAI7D,EAAO,CAACE,MAAOyD,EAAO1B,QAASR,WAAW,IACvE,QACI,OAAOzB,MCrBb8D,EAAQC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAExEW,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACI,cAAC,EAAD,MACSM,SAASC,eAAe,SAMzCxB,M","file":"static/js/main.b8081050.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n                aria-label=\"Search Robots\"\r\n                className=\"pa3 ba b--green bg-lightest-blue\" \r\n                type='search' \r\n                placeholder=\"search robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {    \r\n    return (        \r\n        <div className=\"ma1 tc bg-light-green dib br3 pa3 grow bw2 shadow-5\">            \r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {    \r\n    return (\r\n        <div>\r\n            {            \r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card                            \r\n                            key={robots[i].id} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst Header = React.memo(() => {\r\n    return <h1 className='f1'>RoboFriends</h1>\r\n})\r\n\r\nexport default Header;\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport Header from '../components/Header';\r\nimport './App.css';\r\nimport {requestRobots, setSearchField} from '../actions';\r\n\r\nfunction App() {    \r\n    const [count, setCount] = useState(0)\r\n    useEffect(()=>{console.log(count)}, [count])\r\n    \r\n    const searchField = useSelector(state => state.searchRobots.searchField)\r\n    const robots = useSelector(state => state.requestRobots.robots)\r\n    const isPending = useSelector(state => state.requestRobots.isPending)\r\n    const error = useSelector(state => state.requestRobots.error)\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(()=>requestRobots(dispatch), [dispatch])\r\n    \r\n    const filteredRobots = robots.filter(robot => {\r\n        return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n\r\n    return isPending ? \r\n        <h1>LOADING...</h1> :\r\n        (\r\n            <div className=\"tc\">\r\n                <Header/>\r\n                <button onClick={()=>setCount(count+1)}>Click Me! {count}</button>\r\n                <SearchBox searchChange={(event) => dispatch(setSearchField(event.target.value))} />\r\n                <Scroll>\r\n                    <ErrorBoundry error={error}>\r\n                        <CardList robots={filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>    \r\n            </div>\r\n        )        \r\n}\r\n\r\nexport default App;\r\n","import { \r\n    CHANGE_SEARCH_FIELD, \r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from './constants'\r\n\r\nexport const setSearchField = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n})\r\n\r\nexport const requestRobots = (dispatch) => {\r\n    dispatch({ type: REQUEST_ROBOTS_PENDING})\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n    .catch(error => dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { \r\n    CHANGE_SEARCH_FIELD, \r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED\r\n} from './constants'\r\n\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchRobots = (state=initialStateSearch, action={}) => {\r\n    switch(action.type){\r\n        case CHANGE_SEARCH_FIELD : \r\n            return Object.assign({}, state, {searchField: action.payload})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n}\r\nexport const requestRobots = (state=initialStateRobots, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, {isPending: true})\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, {robots: action.payload, isPending: false})\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return Object.assign({}, state, {error: action.payload, isPending: false})\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\nimport { searchRobots, requestRobots } from './reducers';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n    <Provider store={store} >\n        <App/>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}